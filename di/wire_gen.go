// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"dogker/lintang/container-service/biz/dal/db"
	"dogker/lintang/container-service/biz/dal/messagebroker"
	"dogker/lintang/container-service/biz/router"
	"dogker/lintang/container-service/biz/service"
	"dogker/lintang/container-service/biz/webapi"
	"dogker/lintang/container-service/config"
	"github.com/google/wire"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func InitContainerService(pg *db.Postgres, rmq *messagebroker.RabbitMQ, cfg *config.Config, cc *grpc.ClientConn) *service.ContainerService {
	containerRepository := db.NewContainerRepo(pg)
	dockerEngineAPI := webapi.CreateNewDockerEngineAPI(cfg)
	dkronAPI := webapi.CreateDkronAPI(cfg)
	monitorClient := webapi.NewMonitorClient(cc)
	minioAPI := webapi.NewMinioAPI(cfg)
	containerService := service.NewContainerService(containerRepository, dockerEngineAPI, dkronAPI, monitorClient, minioAPI)
	return containerService
}

func InitContainerGRPCService(pg *db.Postgres, rmq *messagebroker.RabbitMQ, cfg *config.Config, cc *grpc.ClientConn) *service.ContainerGRPCServiceImpl {
	containerRepository := db.NewContainerRepo(pg)
	dockerEngineAPI := webapi.CreateNewDockerEngineAPI(cfg)
	dkronAPI := webapi.CreateDkronAPI(cfg)
	monitorClient := webapi.NewMonitorClient(cc)
	minioAPI := webapi.NewMinioAPI(cfg)
	containerGRPCServiceImpl := service.NewContainerGRPCService(containerRepository, dockerEngineAPI, dkronAPI, monitorClient, minioAPI)
	return containerGRPCServiceImpl
}

// wire.go:

var ProviderSet wire.ProviderSet = wire.NewSet(service.NewContainerService, webapi.CreateNewDockerEngineAPI, db.NewContainerRepo, webapi.CreateDkronAPI, webapi.NewMonitorClient, webapi.NewMinioAPI, wire.Bind(new(router.ContainerService), new(*service.ContainerService)), wire.Bind(new(service.ContainerRepository), new(*db.ContainerRepository)), wire.Bind(new(service.DockerEngineAPI), new(*webapi.DockerEngineAPI)), wire.Bind(new(service.DkronAPI), new(*webapi.DkronAPI)), wire.Bind(new(service.MonitorClient), new(*webapi.MonitorClient)), wire.Bind(new(service.MinioAPI), new(*webapi.MinioAPI)))

// kitex
var ProviderSetGRPC wire.ProviderSet = wire.NewSet(service.NewContainerGRPCService, webapi.CreateNewDockerEngineAPI, db.NewContainerRepo, webapi.CreateDkronAPI, webapi.NewMonitorClient, webapi.NewMinioAPI, wire.Bind(new(service.ContainerRepository), new(*db.ContainerRepository)), wire.Bind(new(service.DockerEngineAPI), new(*webapi.DockerEngineAPI)), wire.Bind(new(service.DkronAPI), new(*webapi.DkronAPI)), wire.Bind(new(service.MonitorClient), new(*webapi.MonitorClient)), wire.Bind(new(service.MinioAPI), new(*webapi.MinioAPI)))
