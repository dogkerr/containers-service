// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package queries

import (
	"context"
)

// iteratorForBatchInsertContainerMetrics implements pgx.CopyFromSource.
type iteratorForBatchInsertContainerMetrics struct {
	rows                 []BatchInsertContainerMetricsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchInsertContainerMetrics) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchInsertContainerMetrics) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ContainerID,
		r.rows[0].Cpus,
		r.rows[0].Memory,
		r.rows[0].NetworkIngress,
		r.rows[0].NetworkEgress,
	}, nil
}

func (r iteratorForBatchInsertContainerMetrics) Err() error {
	return nil
}

func (q *Queries) BatchInsertContainerMetrics(ctx context.Context, arg []BatchInsertContainerMetricsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"container_metrics"}, []string{"container_id", "cpus", "memory", "network_ingress", "network_egress"}, &iteratorForBatchInsertContainerMetrics{rows: arg})
}
